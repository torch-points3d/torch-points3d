# @package models
ResUnet32:
  class: spconv3d.SparseConv3d
  conv_type: "SPARSE"
  backend: "torchsparse"
  normalize_feature: True
  metric_loss:
    class: "ContrastiveHardestNegativeLoss"
    params:
      num_pos: 1024
      num_hn_samples: 256
      pos_thresh: 0.1
      neg_thresh: 1.4
  define_constants:
      in_feat: 32
      block: ResBlock
  backbone:
    down_conv:
      module_name: ResNetDown
      block: block
      N: [0, 1, 2, 2, 3]
      down_conv_nn:
        [
          [FEAT, in_feat],
          [in_feat, in_feat],
          [in_feat, 2*in_feat],
          [2*in_feat, 4*in_feat],
          [4*in_feat, 8*in_feat],
        ]
      kernel_size: 3
      stride: [1, 2, 2, 2, 2]
    up_conv:
      block: block
      module_name: ResNetUp
      N: [1, 1, 1, 1, 0]
      up_conv_nn:
        [
          [8*in_feat, 4*in_feat],
          [4*in_feat + 4*in_feat, 4*in_feat],
          [4*in_feat + 2*in_feat, 3*in_feat],
          [3*in_feat + in_feat, 3*in_feat],
          [3*in_feat + in_feat, 3*in_feat],
        ]
      kernel_size: 3
      stride: [2, 2, 2, 2, 1]
  mlp_cls:
    nn: [3*in_feat, 2*in_feat, in_feat]
