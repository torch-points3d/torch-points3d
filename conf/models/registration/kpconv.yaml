# @package models
KPFCNN:
  class: kpconv.FragmentKPConv
  conv_type: "PARTIAL_DENSE"
  out_channels: 32
  loss_mode: "match"
  normalize_feature: True
  define_constants:
    in_grid_size: ${data.first_subsampling}
    in_feat: 64
    bn_momentum: 0.02
  down_conv:
    down_conv_nn:
      [
        [[FEAT, in_feat], [in_feat, 2*in_feat]],
        [[2*in_feat, 2*in_feat], [2*in_feat, 4*in_feat]],
        [[4*in_feat, 4*in_feat], [4*in_feat, 8*in_feat]],
        [[8*in_feat, 8*in_feat], [8*in_feat, 16*in_feat]],
        [[16*in_feat, 16*in_feat], [16*in_feat, 32*in_feat]],
      ]
    grid_size:
      [
        [in_grid_size, in_grid_size],
        [2*in_grid_size, 2*in_grid_size],
        [4*in_grid_size, 4*in_grid_size],
        [8*in_grid_size, 8*in_grid_size],
        [16*in_grid_size, 16*in_grid_size],
      ]
    prev_grid_size:
      [
        [in_grid_size, in_grid_size],
        [in_grid_size, 2*in_grid_size],
        [2*in_grid_size, 4*in_grid_size],
        [4*in_grid_size, 8*in_grid_size],
        [8*in_grid_size, 16*in_grid_size],
      ]
    block_names:
      [
        ["SimpleBlock", "ResnetBBlock"],
        ["ResnetBBlock", "ResnetBBlock"],
        ["ResnetBBlock", "ResnetBBlock"],
        ["ResnetBBlock", "ResnetBBlock"],
        ["ResnetBBlock", "ResnetBBlock"],
      ]
    has_bottleneck:
      [
        [False, True],
        [True, True],
        [True, True],
        [True, True],
        [True, True],
      ]
    deformable:
      [
        [False, False],
        [False, False],
        [False, False],
        [False, False],
        [False, False],
      ]
    max_num_neighbors:
      [[20, 20], [20, 20], [20, 32], [32, 32], [32, 32]]
    module_name: KPDualBlock
  up_conv:
    module_name: FPModule_PD
    up_conv_nn:
      [
        [32*in_feat + 16*in_feat, 8*in_feat],
        [8*in_feat + 8*in_feat, 4*in_feat],
        [4*in_feat + 4*in_feat, 2*in_feat],
        [2*in_feat + 2*in_feat, in_feat],
      ]
    skip: True
    up_k: [1,1,1,1]
    bn_momentum:
      [
        bn_momentum,
        bn_momentum,
        bn_momentum,
        bn_momentum,
        bn_momentum,
      ]
  mlp_cls:
    nn: [in_feat, in_feat]
    dropout: 0
    bn_momentum: bn_momentum
  loss_weights:
    lambda_reg: 0
  metric_loss:
    class: "ContrastiveHardestNegativeLoss"
    params:
      num_pos: 1024
      num_hn_samples: 256
      pos_thresh: 0.1
      neg_thresh: 1.4
