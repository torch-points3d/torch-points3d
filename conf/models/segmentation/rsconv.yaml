models:
    # Relation-Shape Convolutional Neural Network for Point Cloud Analysis (https://arxiv.org/abs/1904.07601)
    RSConv_2LD:
        class: rsconv.RSConv_MP
        conv_type: "MESSAGE_PASSING"
        down_conv:
            module_name: RSConvDown
            ratios: [0.2, 0.25]
            radius: [0.1, 0.2]
            local_nn: [[10, 8, FEAT], [10, 32, 64, 64]]
            down_conv_nn: [[FEAT, 16, 32, 64], [64, 64, 128]]
        innermost:
            module_name: GlobalBaseModule
            aggr: max
            nn: [128 + FEAT, 128]
        up_conv:
            module_name: FPModule
            ratios: [1, 0.25, 0.2]
            radius: [0.2, 0.2, 0.1]
            up_conv_nn: [[128 + 128, 64], [64 + 64, 64], [64, 64]]
            up_k: [1, 3, 3]
            skip: True
        mlp_cls:
            nn: [64, 64, 64, 64, 64]
            dropout: 0.5

    RSConv_4LD:
        class: rsconv.RSConv_MP
        conv_type: "MESSAGE_PASSING"
        down_conv:
            module_name: RSConvDown
            ratios: [0.5, 0.5, 0.5, 0.5]
            radius: [0.1, 0.2, 0.3, 0.4]
            local_nn: [[10, 8, FEAT], [10, 16, 16], [10, 32, 32], [10, 64, 64]]
            down_conv_nn:
                [[FEAT, 16, 16], [16, 32, 32], [32, 64, 64], [64, 128, 128]]
        innermost:
            module_name: GlobalBaseModule
            aggr: max
            nn: [131, 128] #[3  + 128]
        up_conv:
            module_name: FPModule
            up_conv_nn:
                [
                    [128 + 128, 128],
                    [128 + 64, 64],
                    [64 + 32, 32],
                    [32 + 16, 32],
                    [32, 64],
                ]
            up_k: [1, 3, 3, 3, 3]
            skip: True
        mlp_cls:
            nn: [64, 64, 64, 64, 64]
            dropout: 0.1

    RSConv_MSN:
        class: rsconv.RSConvLogicModel
        conv_type: "DENSE"
        use_category: ${data.use_category}
        down_conv:
            module_name: RSConvOriginalMSGDown
            npoint: [1024, 256, 64, 16]
            radii:
                [
                    [0.075, 0.1, 0.125],
                    [0.1, 0.15, 0.2],
                    [0.2, 0.3, 0.4],
                    [0.4, 0.6, 0.8],
                ]
            nsamples: [[16, 32, 48], [16, 48, 64], [16, 32, 48], [16, 24, 32]]
            down_conv_nn:
                [
                    [[10, 64//2, 16], [FEAT + 3, 16]],
                    [10, 128//4, 64 * 3 + 3],
                    [10, 256//4, 128 * 3  + 3],
                    [10, 512//4, 256 * 3  + 3],
                ]
            channel_raising_nn:
                [
                    [16, 64],
                    [64 * 3  + 3, 128],
                    [128 * 3  + 3, 256],
                    [256 * 3  + 3, 512],
                ]
        innermost:
            - module_name: GlobalDenseBaseModule
              nn: [512 * 3 + 3, 128]
              aggr: "mean"
            - module_name: GlobalDenseBaseModule
              nn: [256 * 3 + 3, 128]
              aggr: "mean"
        up_conv:
            bn: True
            bias: False
            module_name: DenseFPModule
            up_conv_nn:
                [
                    [512 * 3 + 256 * 3, 512, 512],
                    [128 * 3 + 512, 512, 512],
                    [64 * 3 + 512, 256, 256],
                    [256 + FEAT, 128, 128],
                    [],
                ]
            skip: True
        mlp_cls:
            nn: [128 * 2 + 2 * 64, 128]
            dropout: 0

    RSConv_MSN_S3DIS:
        class: rsconv.RSConvLogicModel
        conv_type: "DENSE"
        use_category: ${data.use_category}
        down_conv:
            module_name: RSConvOriginalMSGDown
            npoint: [2048, 1024, 512, 64]
            radii:
                [
                    [0.075, 0.1, 0.125],
                    [0.1, 0.15, 0.2],
                    [0.2, 0.3, 0.4],
                    [0.4, 0.6, 0.8],
                ]
            nsamples: [[16, 32, 48], [16, 48, 64], [16, 32, 48], [16, 24, 32]]
            down_conv_nn:
                [
                    [[10, 64//2, 16], [FEAT + 3, 16]],
                    [10, 128//4, 64 * 3 + 3],
                    [10, 256//4, 128 * 3  + 3],
                    [10, 512//4, 256 * 3  + 3],
                ]
            channel_raising_nn:
                [
                    [16, 64],
                    [64 * 3  + 3, 128],
                    [128 * 3  + 3, 256],
                    [256 * 3  + 3, 512],
                ]
        innermost:
            - module_name: GlobalDenseBaseModule
              nn: [512 * 3 + 3, 128]
              aggr: "mean"
            - module_name: GlobalDenseBaseModule
              nn: [256 * 3 + 3, 128]
              aggr: "mean"
        up_conv:
            bn: True
            bias: False
            module_name: DenseFPModule
            up_conv_nn:
                [
                    [512 * 3 + 256 * 3, 512, 512],
                    [128 * 3 + 512, 512, 512],
                    [64 * 3 + 512, 256, 256],
                    [256 + FEAT, 128, 128],
                    [],
                ]
            skip: True
        mlp_cls:
            nn: [128 * 2 + 2 * 64, 128]
            dropout: 0.

    RSConv_Indoor:
        class: rsconv.RSConvLogicModel
        conv_type: "DENSE"
        down_conv:
            module_name: RSConvOriginalMSGDown
            npoint: [2048, 1024, 512, 256]
            radii:
                [
                    [0.125, 0.2, 0.25],
                    [0.2, 0.3, 0.4],
                    [0.4, 0.6, 0.8],
                    [0.8, 1.2, 1.6],
                ]
            nsamples: [[16, 32, 48], [16, 48, 64], [16, 32, 48], [16, 24, 32]]
            down_conv_nn:
                [
                    [[10, 64//2, 16], [FEAT + 3, 16]],
                    [10, 128//4, 64 * 3 + 3],
                    [10, 256//4, 128 * 3  + 3],
                    [10, 512//4, 256 * 3  + 3],
                ]
            channel_raising_nn:
                [
                    [16, 64],
                    [64 * 3  + 3, 128],
                    [128 * 3  + 3, 256],
                    [256 * 3  + 3, 512],
                ]
        innermost:
            - module_name: GlobalDenseBaseModule
              nn: [512 * 3 + 3, 128]
              aggr: "mean"
            - module_name: GlobalDenseBaseModule
              nn: [256 * 3 + 3, 128]
              aggr: "mean"
        up_conv:
            bn: True
            bias: False
            module_name: DenseFPModule
            up_conv_nn:
                [
                    [512 * 3 + 256 * 3, 512, 512],
                    [128 * 3 + 512, 512, 512],
                    [64 * 3 + 512, 256, 256],
                    [256 + FEAT, 128, 128],
                    [],
                ]
            skip: True
        mlp_cls:
            nn: [128 * 2 + 2 * 64, 128]
            dropout: 0.
