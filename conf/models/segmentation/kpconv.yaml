models:
    # KPConv: Flexible and Deformable Convolution for Point Clouds (https://arxiv.org/abs/1904.08889)
    # KPConv support format_type="[PARTIAL_DENSE | MESSAGE_PASSING]"
    SimpleKPConv:
        architecture: kpconv.KPConvSeg
        conv_type: "MESSAGE_PASSING"
        down_conv:
            module_name: KPConv
            ratios: [0.2, 0.25]
            radius: [0.2, 0.4]
            down_conv_nn: [[FEAT, 32], [32, 64]]
        up_conv:
            module_name: FPModule
            up_conv_nn: [[128 + 64, 64], [64 + 32, 64], [64 + FEAT, 64]]
            up_k: [1, 3, 3]
            skip: True
        innermost:
            module_name: GlobalBaseModule
            aggr: max
            nn: [67, 128]
        mlp_cls:
            nn: [64, 64, 64, 64, 64]
            dropout: 0.5

    PDSimpleKPConv:
        architecture: kpconv.KPConvSeg
        conv_type: "PARTIAL_DENSE"
        down_conv:
            module_name: SimpleBlock
            grid_size: [0.1, 0.5]
            radius: [0.2, 0.4]
            max_num_neighbors: [16, 16]
            down_conv_nn: [[FEAT, 32], [32, 64]]
        up_conv:
            module_name: FPModule
            up_conv_nn: [[128 + 64, 64], [64 + 32, 64], [64 + FEAT, 64]]
            up_k: [1, 3, 3]
            skip: True
        innermost:
            module_name: GlobalPartialDenseBaseModule
            aggr: max
            nn: [64 + 3, 128]
        mlp_cls:
            nn: [64, 64, 64, 64, 64]
            dropout: 0.5

    Resnet_BK_PD_KPConv:
        architecture: kpconv.KPConvSeg
        conv_type: "PARTIAL_DENSE"
        down_conv:
            module_name: ResnetBottleNeckPartialDense
            ratios: [0.25, 0.5, 0.5]
            radius: [0.2, 0.4, 0.6]
            max_num_neighbors: [16, 16, 32]
            down_conv_nn:
                [[FEAT, 32 // 4, 32], [32, 64 // 4, 64], [64, 128 // 4, 128]]
        up_conv:
            module_name: FPModule
            up_conv_nn:
                [
                    [128 + 128, 128],
                    [128 + 64, 64],
                    [64 + 32, 64],
                    [64 + FEAT, 64],
                ]
            up_k: [1, 3, 3, 5]
            skip: True
        innermost:
            module_name: GlobalPartialDenseBaseModule
            aggr: max
            nn: [128 + 3, 128]
        mlp_cls:
            nn: [64, 64, 64, 64, 64]
            dropout: 0.5

    ResidualKPConv:
        architecture: kpconv.KPConvSeg
        conv_type: "MESSAGE_PASSING"
        down_conv:
            module_name: ResidualBKPConv
            ratios: [0.2, 0.25]
            radius: [0.2, 0.4]
            down_conv_nn: [[FEAT, 32], [32, 64]]
        up_conv:
            module_name: ResidualUpsampleBKPConv
            radius: [1, 0.2, 0.1]
            up_conv_nn: [[128, 128], [64, 64], [64, 64]]
            mlp_nn: [[128 + 64, 64], [32 + 64, 64], [64 + FEAT, 64]]
            skip: True
        innermost:
            module_name: GlobalBaseModule
            aggr: max
            nn: [64 + FEAT, 128]
        mlp_cls:
            nn: [64, 64, 64, 64, 64]
            dropout: 0.5

    DeformableResidualKPConv:
        architecture: kpconv.KPConvSeg
        conv_type: "MESSAGE_PASSING"
        down_conv:
            module_name: LightDeformableKPConv
            ratios: [0.2, 0.25]
            radius: [0.2, 0.4]
            down_conv_nn: [[FEAT, 32], [32, 64]]
        up_conv:
            module_name: SimpleUpsampleKPConv
            radius: [1, 0.2, 0.1]
            up_conv_nn: [[128, 128], [64, 64], [64, 64]]
            mlp_nn: [[128 + 64, 64], [64 + 32, 64], [64 + FEAT, 64]]
            skip: True
        innermost:
            module_name: GlobalBaseModule
            aggr: max
            nn: [67, 128]
        mlp_cls:
            nn: [64, 64, 64, 64, 64]
            dropout: 0.5
